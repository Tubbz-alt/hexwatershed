  //50==================================================
/*!
  \file   global.cpp
  \brief

  <long description>

  \author Chang Liao
  \date   2017-01-25
*/
  //50==================================================
#include "global.h"
//50==================================================
//the global constant file for all the modules
//some constants or variables are written cross-platfrom
//50==================================================

const double near_zero = 0.000001;
const double pi = 3.141592654;
const double missing_value = -9999.0;

//time
const double day_2_second = 3600 * 24;
const double day_2_minute = 60 * 24;
const double hour_2_second = 3600;
const double dTimestep_ecosystem = 1.0; //unit: second

//length
const double millimeter_2_meter = 0.001;
const double meter_2_millimeter = 1000.0;
const double meter_2_foot = 3.28084; //conversion
const double inch_2_centimeter = 2.54;
const double inch_2_meter = 2.54 / 100.0;

//area
const double hpa_2_pa = 100.0;
const double square_meter_2_square_centimeter = 10000.0;

//mass
const double gram_2_kilogram = 0.001;
const double milligram_2_kilogram = 1.0E-6;

//temperature
const double kelvin_2_celsius = -273.15;
const double celsius_2_kelvin = 273.15;

//conversion
const double calorie_2_joule = 4.1858;//convert from calorie to langley
const double joule_2_calorie = 1.0 / 4.1858;
const double joule_2_langley = 1.0 / 41840.0; //convert from joulies to langley
const double joule_2_megajoule = 0.000001;
const double langley_2_joule = 41840.0;


const double kilogram_per_cubic_meter_2_gram_per_cubic_centimeter = 1000 / 1000000.0;
const double kilogram_per_square_meter_2_gram_per_square_meter = 1000;
const double kilogram_per_cubic_meter_2_milligram_per_liter = 1000; 

const double kilogram_per_cubic_meter_2_gram_per_liter = 1;

const double kilogram_per_kilogram_2_milligram_per_gram = 1000;
const double gram_per_square_meter_2_kilogram_per_square_meter = 0.001;

const double milligram_per_liter_2_kilogram_per_cubic_meter = 0.001;
const double milligram_per_gram_2_kilogram_per_kilogram = 0.001;

const double cubic_meter_2_cubic_liter = 1000;
const double cubic_meter_2_cubic_centimeter = 1.0E6;
const double cubic_centimeter_2_cubic_meter = 1.0E-6;

//physical
const double dStefan_boltzmann = 5.670373E-8; //unit: w/m-2 K-4

const double dManning_roughness = 0.02;
const double radian = 0.0172;
const double dEccentricy = 0.0167;
//solar constant units: watt per square meter, look at wiki: https://en.wikipedia.org/wiki/Solar_ ant
const double dSolar_constant = 1368.0;

const double dFrozen_temperature = 273.15; //unit: K
const double dDensity_water = 1000.0;//density of water, unit:
const double dLatent_heat_water = 333.55 * 1000.0; //heat of fusion (latent heat) of water. units: joule per kilogram


//50==================================================
const double dSpecific_heat_water = 4.179 * 1000.0; //the specific heat of water, units: j / (kg * kelvin )
const double dSpecific_heat_ice = 2.03 * 1000.0; //the specific heat of ice, units: j / (kg * kelvin )

const double tkwat = 1.0; // thermal conductivity of water (w/m/kelvin)
const double tkice = 1.0; // thermal conductivity of ice (w/m/kelvin)
const double cwat = 1.0; // specific heat capacity of water (j/m**3/kelvin)
const double cice = 1.0; // specific heat capacity of ice (j/m**3/kelvin)

//gis
const double dResolution = 500.0;//unit: meter
const double dArea = 500.0 * 500.0;

//modules

const double dTemperature_all_rain = 273.0; //unit: kelvin
const double dTemperature_all_snow = 273.0; //unit: kelvin
const double dFraction_sublimation = 0.5; //snow, this one should be in snow class



//system





const char slash = '/';
